@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;
@model X.PagedList.IPagedList<Worflow.Models.Lead>;

@{
    ViewData["Title"] = "ListarLead";
}

<form asp-action="PesquisarLeads">

    <div class="row mb-3">

        <div class="col-10">

            <div class="input-group flex-nowrap mb-2">
                <span class="input-group-text" id="addon-wrapping"><i class="fa-solid fa-magnifying-glass" style="color: var(--corPrincipal); margin-right: 5px"></i></span>
                <input type="text" class="form-control" id="txtPesquisar" name="pesquisar" placeholder="Lead, Razão Social, Fantasia, Produto, Status" aria-label="Username" aria-describedby="addon-wrapping">
            </div>

        </div>

        <div class="col-2">
            <button type="submit" class="btn btn-Acoes-v2 mb-2">Pesquisar</button>
        </div>

    </div>

</form>

<div class="table-responsive">

    <partial name="~/Views/Lead/PartialViews/_TabelaLeads.cshtml" />

</div>

<div class="row mb-3">

    <div class="col-12">

        <div class="d-flex justify-content-between mt-2">

            @Html.PagedListPager(Model, pagina => Url.Action("ListarLead", new { pagina }),
            new PagedListRenderOptions {
            LiElementClasses = new string[] { "page-item" },
            PageClasses = new string[] { "page-link" }
            })

            <span class="pull-right">
                Listando @Model.FirstItemOnPage a @Model.LastItemOnPage de um total de @Model.TotalItemCount
            </span>

        </div>

    </div>

</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}